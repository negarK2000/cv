import uuid from 'react-uuid'

const my_projects = [
    {
        id: uuid(),
        title: 'Information Retrieval System\n(From Scratch)',
        techs: 'Python',
        date: 'Fall 2021',
        github: 'https://github.com/negarK2000/InformationRetrievalSystem#a-search-engine-for-retrieving-articles-from-a-persian-news-website',
        algs: ['Position and Inverted Indexes', 'TF-IDF Weighting Method', 'Cosine Similarity Measure', 'Champion List Technique', 'Word2Vec Skip-Gram Model', 'Mean Reciprocal Rank', 'Mean Average Precision', 'Precision@k', 'Cross-Validation Method', 'K-means Algorithm'],
        desc: 'This project was developed in three phases to create an information retrieval system (search engine) for a Persian news data set.\nThese phases are as follow:\nPhase 1: Simple Information Retrieval Model\n Phase 2 - Version 1: Enhanced Information Retrieval Model with Advanced Functionalities\n Phase 2 - Version 2: Document Representation Using Word Embedding\n Phase 3: Implementation of Clustering, Categorization, and Retrieval Based on Cluster/Category',
    },
    {
        id: uuid(),
        title: 'Internet of Things Projects\nwith Arduino IDE and Proteus',
        techs: 'C++, Arduino, Proteus',
        date: 'Spring 2022',
        github: 'https://github.com/negarK2000/IoT',
        algs: [],
        desc: `This is a collection of IoT projects developed with Arduino IDE and simulated using the Proteus software. Each project showcases the application of IoT concepts and technologies, and is accompanied by a detailed YouTube tutorial (in Persian) explaining the project's functionality and the logic behind the code. These projects are:\n   1- Smart Parking\n   2- Smart Bin\n   3- Screen Light\n   4- Attendance System\n   5- Smart Greenhouse\n   6- Parking Door\n   7- Alarm\n   8- Smart Home\n   9- Security System`,
    },
    {
        id: uuid(),
        title: 'Music Recognition\n(from Scratch)',
        techs: 'Python',
        date: 'Spring 2021',
        github: 'https://github.com/negarK2000/SignalsAndSystems/tree/master/MusicRecognitionSystem#music-recognition-using-fourier-transform-from-scratch',
        algs: ['Fourier Transform'],
        desc: 'Music recognition has become an essential feature in today\'s digital age. With the abundance of music available, users often encounter situations where they hear a song but are unable to identify its title and artist. This code provides a solution by leveraging the power of the Fourier Transform (combined with concepts from signals & systems), a mathematical technique used to analyze signals in the frequency domain. Similar to popular applications like Shazam, this code allows you to analyze audio samples and recognize the corresponding songs accurately.',
    },
    {
        id: uuid(),
        title: 'Internet Engineering Course Webpsite',
        techs: 'HTML, CSS, SCSS',
        date: 'Fall 2022',
        github: 'https://github.com/negarK2000/CourseWebpsite',
        algs: [],
        desc: 'As part of my role as a Teaching Assistant (TA) for the Internet Engineering course, I undertook the task of designing a front-end assignment that focuses on the fundamental concepts of web development. The objective of this project was to provide students with an engaging hands-on experience.\nThe project entailed creating a simple yet functional website using these core technologies. By utilizing HTML, students were able to structure the website\'s content effectively, while CSS allowed them to craft visually appealing designs. To further enhance the styling process, the project introduced SCSSâ€”a powerful extension of CSS that empowers students to write clean and maintainable code through the utilization of variables, mixins, and nesting.',
    },
    {
        id: uuid(),
        title: 'Handwritten Digit Recognition\n(from Scratch)',
        techs: 'Python',
        date: 'Fall 2022',
        github: 'https://github.com/negarK2000/ComputationalIntelligence/tree/master/HandwrittenDigitRecognition',
        algs: ['Feedforward Neural Networks (FNN)', 'Backpropagation', 'Mini-batch Gradient Descent', 'ReLU Activation Function'],
        desc: 'This project focuses on implementing a handwritten digit recognition system without relying on any pre-existing machine learning frameworks or libraries. The aim is to develop a deep learning model entirely from scratch to recognize and classify handwritten digits.',
    },
    {
        id: uuid(),
        title: 'The Pac-Man Projects',
        techs: 'Python',
        date: 'Fall 2021',
        github: 'https://github.com/negarK2000/ArtificialIntelligence',
        algs: ['depth-first search', 'breadth-first search', 'uniform cost search', 'A* search', 'Markov decision processes (MDPs)', 'Q-learning algorithms'],
        desc: 'This project is my solutions for the CS188 coursework from UC Berkeley that consists of three phases: Search, Multi-Agent, and Reinforcement Learning. Each phase explores different concepts and techniques in the field of artificial intelligence. The project assignments can be found on the UC Berkeley CS188 website.',
    },
    {
        id: uuid(),
        title: 'XV6 OS Project',
        techs: 'Linux, VMware Workstation, xv6',
        date: 'Fall 2021',
        github: 'https://github.com/negarK2000/XV6',
        algs: [],
        desc: 'This is a collection of three projects that extend the functionality of the XV6 operating system. Each project introduces new system calls and implements additional features to enhance the capabilities of XV6. Here are these projects:\n   Project 1: Adding System Calls - ProcCount and ReadCount\n   Project 2: Adding System Calls - ProcTick and Sysinfo\n   Project 3: Implementing Waiting Queue, Dispatcher, and Unit Operations',
    },
    {
        id: uuid(),
        title: 'BMP photos Image Compression\n(from Scratch)',
        techs: 'Python, Jupyter notebook',
        date: 'Spring 2021',
        github: 'https://github.com/negarK2000/AppliedLinearAlgebra/tree/master/ImageCompression#image-compression-using-singular-value-decomposition-svd',
        algs: ['Singular Value Decomposition (SVD)'],
        desc: 'Image compression is a fundamental task in computer vision and multimedia applications. The aim is to reduce the size of an image file without significant loss of visual quality. This project takes a different approach by utilizing the principles of linear algebra, specifically Singular Value Decomposition, to compress BMP photos. The algorithm breaks down the image matrix into three separate matrices representing its color channels (red, green, and blue). Each channel matrix is then decomposed using SVD, resulting in three sets of singular values and corresponding matrices. Unlike traditional image compression techniques that rely on external libraries, this code implements the compression algorithm entirely from scratch using Python and the principles of linear algebra.',
    },
    {
        id: uuid(),
        title: 'Denoising Bitcoin\'s Price Graph\n(from Scratch)',
        techs: 'Python, Jupyter notebook',
        date: 'Spring 2021',
        github: 'https://github.com/negarK2000/AppliedLinearAlgebra/tree/master/Denoising',
        algs: ['least-squares method'],
        desc: 'Bitcoin\'s price graph often contains a significant amount of noise, which can make it challenging to analyze trends and patterns accurately. This project addresses this issue by applying a denoising algorithm based on the principles of linear algebra. The algorithm utilizes the least-squares method to remove the noise and produce a cleaner representation of Bitcoin\'s price fluctuations.',
    },
    {
        id: uuid(),
        title: 'Image Contrast Enhancement\n(from Scratch)',
        techs: 'Python, Jupyter notebook',
        date: 'Spring 2022',
        github: 'https://github.com/negarK2000/Multimedia/tree/master/HistogramEqualization',
        algs: ['Histogram Equalization'],
        desc: 'This project utilizes multimedia science and the power of histogram equalization to enhance the contrast of digital images. By applying this method, we aim to increase the overall contrast of the images and distribute repeating colors more evenly, resulting in visually appealing and vibrant images. This technique works particularly well for images with a more compact and limited color range.',
    },
    {
        id: uuid(),
        title: 'JPEG Image Compression\n(from Scratch)',
        techs: 'Python, Jupyter notebook',
        date: 'Spring 2022',
        github: 'https://github.com/negarK2000/Multimedia/tree/master/JPEG_Compression',
        algs: ['Discrete Cosine Transform', 'Quantization', 'Huffman Coding Algorithm'],
        desc: 'JPEG Image Compression, a powerful lossy compression algorithm designed specifically for the human eye. This project aims to optimize image storage while maintaining visual accuracy by leveraging three key features:\n   1- Space Redundancy: Images often contain slowly changing and repeated information, leading to redundant data that can be efficiently compressed.\n   2- Frequency Sensitivity: The human eye is less sensitive to the loss of high frequency components compared to low frequency components. By prioritizing preservation of important visual details, our algorithm achieves high compression ratios without significant loss in perceived image quality.\n   3- Color Accuracy: Our algorithm capitalizes on the fact that human vision excels at distinguishing between black and white, allowing us to allocate resources more efficiently in the compression process.',
    },
]

export default my_projects